{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","className","id","cursorColor","text","hideCursorAfterText","textStyle","fontSize","textAlign","typeSpeed","multiText","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0MA+EeA,MAvEf,WACE,OACI,sBAAKC,UAAW,OAAhB,UACI,qBAAKA,UAAW,OAChB,yBAASC,GAAI,QAASD,UAAW,QAAjC,SACI,sBAAKA,UAAW,QAAhB,UACI,cAAC,IAAD,CACIE,YAAa,QACbC,KAAM,cACNC,qBAAqB,EACrBC,UAAW,CACPC,SAAU,OACVC,UAAW,UAEfC,UAAW,MACf,qBAAIR,UAAW,QAAf,mBAA8B,cAAC,IAAD,CAC1BE,YAAa,QACbO,UAAW,CACP,YACA,UACA,QACA,cAEJJ,UAAW,CACPC,SAAU,OACVC,UAAW,0BAI3B,qBAAKP,UAAW,OAAhB,SACI,0BAASC,GAAI,SAAUD,UAAW,SAAlC,UACI,qDACA,mGAGA,wKAGA,sMAGA,8LAGA,qBAAKA,UAAW,SAChB,6DACA,0LAGA,iCACI,uBAAOU,IAAI,gHAEf,yIAGA,+IAGA,qBAAKV,UAAW,SAChB,2CACa,cAAC,IAAD,CAAYA,UAAW,aAEpC,+BAAI,cAAC,IAAD,IAAJ,kBACA,wFCzDHW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0f425ba7.chunk.js","sourcesContent":["import React from 'react';\n// @ts-ignore\nimport TypeWriterEffect from 'react-typewriter-effect';\nimport './App.css';\nimport {FaCircle, FaGithub, FaRegHandPaper, FaTerminal} from \"react-icons/all\";\n\nlet name = \"\";\n\nfunction App() {\n  return (\n      <div className={\"main\"}>\n          <div className={\"bg\"}/>\n          <section id={\"texts\"} className={\"texts\"}>\n              <div className={\"intro\"}>\n                  <TypeWriterEffect\n                      cursorColor={\"white\"}\n                      text={\"GiftShower_\"}\n                      hideCursorAfterText={true}\n                      textStyle={{\n                          fontSize: '70px',\n                          textAlign: 'center',\n                      }}\n                      typeSpeed={100}/>\n                  <h2 className={\"after\"}>I'm a <TypeWriterEffect\n                      cursorColor={\"white\"}\n                      multiText={[\n                          'developer',\n                          'student',\n                          'human',\n                          'programmer',\n                      ]}\n                      textStyle={{\n                          fontSize: '30px',\n                          textAlign: 'match-parent'\n                      }}/></h2>\n              </div>\n          </section>\n          <div className={\"desc\"}>\n              <section id={\"whoami\"} className={\"whoami\"}>\n                  <h3>Hello! 👋</h3>\n                  <span>\n                      안녕하세요, 깊샤입니다!\n                  </span>\n                  <span>\n                      저는 프로그래머를 꿈꾸고 있는 평범한 학생입니다.\n                  </span>\n                  <span>\n                      다양한 프로젝트를 진행하며 프로그래밍을 공부하고 있습니다.\n                  </span>\n                  <span>\n                      비록 제가 잘 한다고는 할수 없지만, 항상 노력하고 있습니다!\n                  </span>\n                  <div className={\"line\"}/>\n                  <h3>What can I do? 🤔</h3>\n                  <span>\n                      재미있어보이는 것들을 우걱우걱 씹어먹고 있는 중입니다!\n                  </span>\n                  <figure>\n                      <embed src=\"https://wakatime.com/share/@4e951a7e-df2f-438a-9fe5-cb3a6fd0e859/17f031db-2fbf-4350-ad00-e0be9885a443.svg\"/>\n                  </figure>\n                  <span>\n                      현재는 코틀린에 가장 자신이 있습니다!\n                  </span>\n                  <span>\n                      IDE는 제트브레인의 IDE를 사용하고 있습니다.\n                  </span>\n                  <div className={\"line\"}/>\n                  <h3>\n                      Projects <FaTerminal className={\"fterm\"}/>\n                  </h3>\n                  <h3><FaGithub/> MultiGround</h3>\n                  <span>This website is WIP. Maybe come back later?</span>\n              </section>\n          </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}